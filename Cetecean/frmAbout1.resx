<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Y7mUthOBv8Z7mxndFue9AAAAAElFTkSuQmCC
</value>
  </data>
</root>